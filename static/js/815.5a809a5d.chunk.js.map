{"version":3,"file":"static/js/815.5a809a5d.chunk.js","mappings":"8RA2JO,SAASA,EAAT,GAAsC,IAAD,IAAnBC,KAAAA,OAAmB,MAAZ,SAAY,EAClCC,GAASC,EAAAA,EAAAA,MAATD,KACAE,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAAA,UAAkBJ,EAAMD,GAAOM,EAAAA,IAA/CH,KACR,IAAKA,EAAM,OAAO,KAClB,GAAa,YAATH,EAAoB,CACtB,IAAQO,EAASJ,EAATI,KACR,OAAKA,GAAQA,EAAKC,QAAU,EAAU,MAEpC,iBAAKC,UAAU,kCAAf,WACE,eAAIA,UAAU,8BAAd,mBACA,gBAAKA,UAAU,oCAAf,UACE,SAAC,KAAD,CACEC,WAAY,OAEZC,cAAe,OAHjB,SAKGJ,EAAKC,OAAS,GACbD,EAAKK,MAAM,EAAG,IAAIC,KAAI,SAACC,GAAD,OACpB,SAAC,KAAD,WACE,iBAAKL,UAAU,YAAf,WACE,gBACEM,IACED,EAAKE,aACDX,EAAAA,GAAAA,cAAsBS,EAAKE,cAC3B,eAENC,IAAI,GACJR,UAAU,6EAEZ,eAAIA,UAAU,8CAAd,SACGK,EAAKI,SAXsBJ,EAAKK,KADrBL,EAAKK,GADH,UAsBjC,CACC,IAAQC,EAAYjB,EAAZiB,QACR,OAAKA,GAAWA,EAAQZ,QAAU,EAAU,KAC/B,WAATR,GAEA,iBAAKS,UAAU,mCAAf,WACE,eAAIA,UAAU,6BAAd,sBACA,gBAAKA,UAAU,uBAAf,SACGW,EAAQR,MAAM,EAAG,GAAGC,KAAI,SAACC,GAAD,OACvB,0BACE,gBAAKL,UAAU,sBAAf,UACE,mBACEY,MAAM,MACNC,OAAO,MACPP,IAAG,wCAAmCD,EAAKS,KAC3CC,MAAM,kFACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACflB,UAAU,iCAVNK,EAAKK,GADQ,SAmBpB,YAATnB,GAEA,iBAAKS,UAAU,4BAAf,WACE,eAAIA,UAAU,qDAAd,8BAGA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CACEC,WAAY,OACZkB,aAAc,GACdjB,cAAe,OAHjB,SAKGS,EAAQZ,OAAS,GAChBY,EAAQP,KAAI,SAACC,GAAD,OACV,SAAC,KAAD,WACE,SAAC,IAAD,CAAQA,KAAMA,KADEA,EAAKK,GADb,WAUnB,IACR,CAED,UA5OqB,WACnB,IAAQlB,GAASC,EAAAA,EAAAA,MAATD,KACAE,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAAA,aAAqBJ,GAAOK,EAAAA,IAA5CH,KAUR,IAPA0B,EAAAA,EAAAA,YAAU,WACKC,SAASC,cAAc,SAE/BC,eAAe,CAClBC,SAAU,UAEb,GAAE,KACE9B,EAAM,OAAO,KAClB,IACE+B,EAUE/B,EAVF+B,cACAC,EASEhC,EATFgC,YACAjB,EAQEf,EARFe,KACAkB,EAOEjC,EAPFiC,SACAC,EAMElC,EANFkC,eACAC,EAKEnC,EALFmC,aACAC,EAIEpC,EAJFoC,mBACAC,EAGErC,EAHFqC,qBACAC,EAEEtC,EAFFsC,qBACAC,EACEvC,EADFuC,OAEIC,EAAUL,EACVM,EAAOP,EACTQ,EAAO,IAAIC,KAAKT,GAAgBU,UAChCC,EAAM,IAAIF,KAAKD,GAAMI,UACrBC,EAAQ,IAAIJ,KAAKD,GAAMM,WAAa,EACpCC,EAAO,IAAIN,KAAKD,GAAMQ,cACtBC,EAAU,UAAMN,EAAN,YAAaE,EAAb,YAAsBE,GAEpC,OACE,iCACE,gBACE3C,UAAU,mBACV8C,MAAO,CACLC,gBAAgB,OAAD,OAASnD,EAAAA,GAAAA,cAAsB6B,GAA/B,MAHnB,UAME,iBAAKzB,UAAU,2BAAf,WACE,SAAC,IAAD,WACE,iBAAKA,UAAU,2BAAf,WACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKM,IAAKV,EAAAA,GAAAA,cAAsB8B,GAAclB,IAAI,QAEpD,iBAAKR,UAAU,wBAAf,WACE,eAAIA,UAAU,sBAAd,SAAqCS,KACrC,iBAAKT,UAAU,qBAAf,WAEE,iBAAKA,UAAU,sCAAf,WACE,gBACEgD,MAAM,6BACNC,QAAQ,YACRC,KAAK,UACLlD,UAAU,UAJZ,UAME,iBACEmD,SAAS,UACTC,EAAE,kSACFC,SAAS,eAGb,iBAAMrD,UAAU,aAAhB,SACGsD,WAAWpB,GAASqB,QAAQ,KACvB,IAfV,UAkBA,iBAAKvD,UAAU,oCAAf,WACE,SAAC,MAAD,CACE8C,MAAO,CACLU,MAAO,cAGX,cAAGxD,UAAU,qBAAb,SAAmC6C,WAIvC,iBAAK7C,UAAU,wBAAf,UACGiC,EAAOlC,OAAS,IACf,gBAAKC,UAAU,+CAAf,SACGiC,EAAO7B,KAAI,SAACC,GAAD,OACV,iBAEEL,UAAU,6EAFZ,SAIGK,EAAKI,MAHDJ,EAAKK,GAFF,OAUhB,gBAAKV,UAAU,OAAf,UACE,qCACY,IACT+B,EAAqBhC,OAAS,GAC7BgC,EAAqB3B,KAAI,SAACC,GAAD,OACvB,kBAAoBL,UAAU,eAA9B,UACGK,EAAKI,KAAM,MADHJ,EAAKK,GADO,UAQ/B,oCACW,IACRsB,EAAqBjC,OAAS,GAC7BiC,EAAqB5B,KAAI,SAACC,GAAD,OACvB,kBAAiBL,UAAU,cAA3B,UACGK,EAAKI,KAAM,OADHgD,EAAAA,EAAAA,KADY,QAM7B,mCACQ,0BAAOtB,EAAKpC,OAAS,GAAKoC,EAAKhC,MAAM,EAAG,SAEhD,uCACY,0BAAO2B,QAEnB,yCACc,gDAOtB,gBAAK9B,UAAU,uBAAf,UACE,iBAAKA,UAAU,4BAAf,WACE,2CACA,cAAGA,UAAU,sBAAb,SAAoC2B,eAM5C,SAACrC,EAAD,CAAQC,KAAK,aACb,SAACD,EAAD,CAAQC,KAAK,YACb,SAACD,EAAD,CAAQC,KAAK,aACb,SAAC,IAAD,CAAamE,QAAM,EAAC1D,UAAU,eAGnC,C,uDCzJD,ICGI2D,EDFJ,GACEC,WAFmC,qBAAXC,QAA0BA,OAAOD,YAAcC,OAAOD,WAAWE,KAAKD,SCI1FE,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKN,KAEHA,EAAoC,qBAAXE,QAA0BA,OAAOF,iBAAmBE,OAAOF,gBAAgBG,KAAKD,SAGvG,MAAM,IAAIK,MAAM,4GAIpB,OAAOP,EAAgBI,EACxB,CCTD,IAFA,IAAMI,EAAY,GAETC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAInE,MAAM,IAGzC,SAASoE,EAAgBC,GAAiB,IAAZC,EAAY,uDAAH,EAG5C,OAAQN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,MAAMC,aACtf,CCYD,MAxBA,SAAYC,EAASC,EAAKH,GACxB,GAAII,EAAAA,aAAsBD,IAAQD,EAChC,OAAOE,EAAAA,aAIT,IAAMC,GADNH,EAAUA,GAAW,CAAC,GACDI,SAAWJ,EAAQV,KAAOA,KAK/C,GAHAa,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPH,EAASA,GAAU,EAEnB,IAAK,IAAIL,EAAI,EAAGA,EAAI,KAAMA,EACxBQ,EAAIH,EAASL,GAAKU,EAAKV,GAGzB,OAAOQ,CACR,CAED,OAAOL,EAAgBO,EACxB,C","sources":["page/TVDetailPage.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../config\";\r\nimport { v4 } from \"uuid\";\r\nimport TvCard from \"components/tv/TvCard\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nconst TVDetailPage = () => {\r\n  const { tvId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getTVDetails(tvId), fetcher);\r\n\r\n  /**Scroll To Top */\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"#root\");\r\n\r\n    body.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }, []);\r\n  if (!data) return null;\r\n  const {\r\n    backdrop_path,\r\n    poster_path,\r\n    name,\r\n    overview,\r\n    first_air_date,\r\n    vote_average,\r\n    number_of_episodes,\r\n    production_companies,\r\n    production_countries,\r\n    genres,\r\n  } = data;\r\n  const average = vote_average;\r\n  const year = first_air_date;\r\n  let date = new Date(first_air_date).getTime();\r\n  let Day = new Date(date).getDate();\r\n  let Month = new Date(date).getMonth() + 1;\r\n  let Year = new Date(date).getFullYear();\r\n  let FormatDate = `${Day}/${Month}/${Year}`;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"wrapp__container\"\r\n        style={{\r\n          backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\r\n        }}\r\n      >\r\n        <div className=\"wrapp--container--around\">\r\n          <Zoom>\r\n            <div className=\"wrapp__detail--container\">\r\n              <div className=\"detail__film--img\">\r\n                <img src={tmdbAPI.imageOriginal(poster_path)} alt=\"\"></img>\r\n              </div>\r\n              <div className=\"detail__film--content\">\r\n                <h2 className=\"detail__film--title\">{name}</h2>\r\n                <div className=\"detail__film--rate\">\r\n                  {/* <img src=\"./imgpng/4star.png\" alt=\"\"> */}\r\n                  <div className=\"flex text-gray-400 detail__film-btn\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"#F5B50A\"\r\n                      className=\"w-6 h-6\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\"\r\n                        clipRule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                    <span className=\"text-white\">\r\n                      {parseFloat(average).toFixed(1)}\r\n                    </span>{\" \"}\r\n                    /10\r\n                  </div>\r\n                  <div className=\"flex items-center film--rate-time\">\r\n                    <BsClock\r\n                      style={{\r\n                        color: \"#bf9722\",\r\n                      }}\r\n                    ></BsClock>\r\n                    <p className=\"detail__film--time\">{FormatDate}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"detail__film--details\">\r\n                  {genres.length > 0 && (\r\n                    <div className=\"flex items-center justify-start mb-4 gap-x-5\">\r\n                      {genres.map((item) => (\r\n                        <span\r\n                          key={item.id}\r\n                          className=\"px-4 py-2 text-[18px] font-bold border rounded border-primary text-primary\"\r\n                        >\r\n                          {item.name}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  <div className=\"flex\">\r\n                    <p>\r\n                      Director:{\" \"}\r\n                      {production_companies.length > 0 &&\r\n                        production_companies.map((item) => (\r\n                          <span key={item.id} className=\" author-name\">\r\n                            {item.name}{\" \"}\r\n                          </span>\r\n                        ))}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <p>\r\n                    Country:{\" \"}\r\n                    {production_countries.length > 0 &&\r\n                      production_countries.map((item) => (\r\n                        <span key={v4()} className=\"author-name\">\r\n                          {item.name}{\" \"}\r\n                        </span>\r\n                      ))}\r\n                  </p>\r\n                  <p>\r\n                    Year: <span>{year.length > 0 && year.slice(0, 4)}</span>\r\n                  </p>\r\n                  <p>\r\n                    Episodes: <span>{number_of_episodes}</span>\r\n                  </p>\r\n                  <p>\r\n                    Resolution: <span>HD</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Zoom>\r\n\r\n          <div className=\"wrapp__view--content\">\r\n            <div className=\"wrapp__view--description \">\r\n              <h3>Movie Content</h3>\r\n              <p className=\"text-lg leading-10 \">{overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <TVMeta type=\"credits\"></TVMeta>\r\n      <TVMeta type=\"videos\"></TVMeta>\r\n      <TVMeta type=\"similar\"></TVMeta>\r\n      <ScrollToTop smooth className=\"pl-[6px]\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport function TVMeta({ type = \"videos\" }) {\r\n  const { tvId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getTVMeta(tvId, type), fetcher);\r\n  if (!data) return null;\r\n  if (type === \"credits\") {\r\n    const { cast } = data;\r\n    if (!cast || cast.length <= 0) return null;\r\n    return (\r\n      <div className=\"py-10 px-44 crossbar wrapp-cast\">\r\n        <h2 className=\"mb-10 text-3xl text-center \">Cast</h2>\r\n        <div className=\"grid grid-cols-5 gap-10 cast-grid\">\r\n          <Swiper\r\n            grabCursor={\"true\"}\r\n            // spaceBetween={20}\r\n            slidesPerView={\"auto\"}\r\n          >\r\n            {cast.length > 0 &&\r\n              cast.slice(0, 20).map((item) => (\r\n                <SwiperSlide key={item.id}>\r\n                  <div className=\"cast-item\" key={item.id}>\r\n                    <img\r\n                      src={\r\n                        item.profile_path\r\n                          ? tmdbAPI.imageOriginal(item.profile_path)\r\n                          : \"./avatar.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"w-full max-w-[250px] h-[250px] object-cover rounded-lg mb-3 select-none\"\r\n                    />\r\n                    <h3 className=\"text-xl font-medium text-center select-none\">\r\n                      {item.name}\r\n                    </h3>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ))}\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const { results } = data;\r\n    if (!results || results.length <= 0) return null;\r\n    if (type === \"videos\")\r\n      return (\r\n        <div className=\"px-20 py-10 crossbar wrapp-video\">\r\n          <h2 className=\"mb-10 text-3xl text-center\">Trailer</h2>\r\n          <div className=\"flex flex-col gap-10\">\r\n            {results.slice(0, 3).map((item) => (\r\n              <div key={item.id}>\r\n                <div className=\"w-full aspect-video\">\r\n                  <iframe\r\n                    width=\"885\"\r\n                    height=\"498\"\r\n                    src={`https://www.youtube.com/embed/${item.key}`}\r\n                    title=\"FULL MATCH — Big E vs. Roman Reigns vs. Bobby Lashley: Raw, Sept. 20, 2021\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                    className=\"object-fill w-full h-full\"\r\n                  ></iframe>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    if (type === \"similar\")\r\n      return (\r\n        <div className=\"py-10 px-28 wrapp-similar\">\r\n          <h2 className=\"pl-10 mb-10 text-3xl font-medium lists__film--head\">\r\n            Similar TV Show\r\n          </h2>\r\n          <div className=\"movie-lists\">\r\n            <Swiper\r\n              grabCursor={\"true\"}\r\n              spaceBetween={30}\r\n              slidesPerView={\"auto\"}\r\n            >\r\n              {results.length > 0 &&\r\n                results.map((item) => (\r\n                  <SwiperSlide key={item.id}>\r\n                    <TvCard item={item}></TvCard>\r\n                  </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default TVDetailPage;\r\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["TVMeta","type","tvId","useParams","data","useSWR","tmdbAPI","fetcher","cast","length","className","grabCursor","slidesPerView","slice","map","item","src","profile_path","alt","name","id","results","width","height","key","title","frameBorder","allow","allowFullScreen","spaceBetween","useEffect","document","querySelector","scrollIntoView","behavior","backdrop_path","poster_path","overview","first_air_date","vote_average","number_of_episodes","production_companies","production_countries","genres","average","year","date","Date","getTime","Day","getDate","Month","getMonth","Year","getFullYear","FormatDate","style","backgroundImage","xmlns","viewBox","fill","fillRule","d","clipRule","parseFloat","toFixed","color","v4","smooth","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}